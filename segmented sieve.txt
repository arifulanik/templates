vector <int > primes;
 
void sieve()
{
    bool isprime[Max];
    long long i,j;
    for(i=0;i<Max;i++)isprime[i]=true;
    for(i=2;i*i<=Max;i++)
    {
        if(isprime[i]==true)
        {
            for(j=i*i;j<=Max;j+=i)
                isprime[j]=false;
        }
    }
    for(i=2;i<=Max;i++)
    {
        if(isprime[i])
            primes.push_back(i);
    }
 
}
 
void segsieve(long long l,long long r)
{
    bool isprime[r-l+1];
    for(int i=0;i<r-l+1;i++)isprime[i]=true;
    if(l==1)isprime[0]=false;
    for(int i=0;primes[i]*primes[i]<=r;i++)
    {
        int cp=primes[i];
        long long base=(l/cp)*cp;
        if(base<l)base+=cp;
        for(int j=base;j<=r;j+=cp)
        {
            isprime[j-l]=false;
        }
        if(base==cp)isprime[base-l]=true;
    }
    for(int i=0;i<r-l+1;i++){
        if(isprime[i])cout<<i+l<<endl;
    }
}