/// Prime factorization 
/// complexity-O(log n)


int spf[N+7];
void sieve()
{
    spf[1]=1;
    for(int i=1;i<=N;++i)
    spf[i]=i;
    for(int i=4;i<=N;i=i+2)
    {
        spf[i]=2;
    }
    for(int i=3;i*i<=N;i=i+2)
    {
        if(spf[i]==i)
        {
           for(int j=i*i;j<=N;j=j+i)
           {
               if(spf[j]==j)
               {
                   spf[j]=i;
               }
           }
        }
    }
}
 vector<int>prime,power;
void prime_factorization(int val)
{
 
    prime.clear();
    power.clear();
    while(val!=1)
    {
        int p=spf[val],cnt=0;
        prime.pb(p);
        while(val%p==0)val=val/p,cnt++;
        power.pb(cnt);
    }
 
}