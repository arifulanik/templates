/// trie 
///using link list


struct node
{
    bool end;
    node* next[27];
    node()
    {
        end=false;
        for(int i=0;i<26;++i)
        next[i]=NULL;
    }
} * root;


void insert(string  s,int len)
{
    node* curr=root;
    for(int i=0;i<len;++i)
    {
        int id=s[i]-'a';
        if(curr->next[id]==NULL)
           curr->next[id]=new node();
        curr=curr->next[id];

    }
    curr->end=1;
}

bool search(string s,int len)
{
    node* curr=root;
    for(int i=0;i<len;++i)
    {
        int id=s[i]-'a';
        if(curr->next[id]==NULL)
           return false;
        curr=curr->next[id];
    }
    return curr->end;
}

void del(node* cur)
{
    for(int i=0;i<26;++i)
    {
        if(cur->next[i])del(cur->next[i]);
    }
    delete(cur);
}
void solve()
{
    root =new node();

    int n;
    cin>>n;
    for(int i=0;i<n;++i)
    {
       string str;
        cin>>str;
        insert(str,str.length());
    }


    int m;/// number of query
    cin>>m;
    for(int i =1;i<=m;++i)
    {
        string str;
        cin>>str;
        if(search(str,str.length()))cout<<"ase\n";
        else cout<<"Nai\n";
    }
    del(root);
}

